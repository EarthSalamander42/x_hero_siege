<root>
	<styles>
		<include src="s2r://panorama/styles/dotastyles.vcss_c" />
<!--	<include src="s2r://panorama/styles/dashboard_page_controlslibrary.vcss_c" /> -->
		<include src="s2r://panorama/styles/custom_game/party_portraits.vcss_c" />
		<include src="s2r://panorama/styles/custom_game/hud_main.css" />
	</styles>

	<script>
		var OnHeroIconClicked = function()
		{
		  var entIndex = $( '#HeroIconContainer').GetAttributeInt( "ent_index", -1 );
		  if ( entIndex !== -1 )
		  {
			  ProcessClick( entIndex );
		  }
		} 

		var OnVIPIconClicked = function()
		{
		  var entIndex = $( '#VIPImage').GetAttributeInt( "ent_index", -1 );
		  if ( entIndex !== -1 )
		  {
			  ProcessClick( entIndex );
		  }
		} 

		var ProcessClick = function( entIndex )
		{
			if ( entIndex === -1 )
				return;

			var clickbehaviors = GameUI.GetClickBehaviors();
			if ( clickbehaviors === CLICK_BEHAVIORS.DOTA_CLICK_BEHAVIOR_CAST )
			{
				var abilityIndex = Abilities.GetLocalPlayerActiveAbility();
				var abilityBehavior = Abilities.GetBehavior( abilityIndex );
				if ( abilityBehavior & DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_UNIT_TARGET )
				{
					var order = {
					  AbilityIndex : abilityIndex,
					  QueueBehavior : OrderQueueBehavior_t.DOTA_ORDER_QUEUE_NEVER,
					  ShowEffects : false,
					  OrderType : dotaunitorder_t.DOTA_UNIT_ORDER_CAST_TARGET,
					  TargetIndex : entIndex,
					};
					Game.PrepareUnitOrders( order );  
					return;  
				}
			}
			
			GameUI.SelectUnit( entIndex, false );
			return;  
		}

		var MoveCameraToHero = function() {
		  var entIndex = $( '#HeroIconContainer').GetAttributeInt( "ent_index", -1 );
		  var position = Entities.GetAbsOrigin(entIndex);
		  GameUI.SetCameraTargetPosition([position[0], position[1], position[2]], 0.4);
		}
	</script>

	<Panel hittest="false" class="PartyPortraitContainer TopBottomFlow">
		<Label hittest="false" id="PlayerName" class="PartyPortraitName" text="" html="true"/>	

		<Panel id="HeroIconContainer" onactivate="OnHeroIconClicked() " ondblclick="MoveCameraToHero()">
			<DOTAHeroImage hittest="false" id="HeroImage" class="PartyPortraitImage" scaling="stretch-to-cover-preserve-aspect" />
			<Panel id="DisconnectIcon" hittest="false"/>
		</Panel>

		<Image id="VIPImage" class="VIPPortraitImage" scaling="stretch-to-cover-preserve-aspect" onactivate="OnVIPIconClicked()"/>

		<ProgressBar hittest="false" id="HealthBar" class="PartyPortraitHealthBar" min="0" max="100" value="100"/>
		<ProgressBar hittest="false" id="ManaBar" class="PartyPortraitManaBar" min="0" max="100" value="100"/>

		<Panel id="PartyLifeRemainingContainer" class="PartyPortaitLivesContainer" require-composition-layer="true" always-cache-composition-layer="true">
			<DOTAHeroImage id="PartyLife0" hittest="false" heroimagestyle="icon" heroid="91" class="LifeLeftIcon LifeUsed" scaling="stretch-to-cover-preserve-aspect" />

			<Label hittest="false" id="LifeAmount" class="PartyPortraitName" text="" html="true"/>	
			<Image id="NeutralImage" scaling="stretch-to-cover-preserve-aspect" onactivate="OnVIPIconClicked()"/>
		</Panel>
	</Panel>	
</root>